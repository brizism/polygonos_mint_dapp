{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/breakpoints.js","styles/globalStyles.js","fonts/basiersquaremono.woff","fonts/basiersquaremono.woff2","fonts/fonts.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","connectFailed","updateAccount","size","xs","sm","lg","xl","device","minxs","minsm","minlg","minxl","maxxs","maxsm","maxlg","maxxl","Screen","styled","div","breakpoint","Information","bg","color","ImagesBanner","TextBanner","Left","Top","Bottom","Right","image","TextDescription","p","createGlobalStyle","basiersquaremono2","basiersquaremono","firstRowImages","map","src","secondRowImages","thirdRowImages","fourthRowImages","StyledButton","button","StyledRoundButton","InteractionBox","ButtonWrapper","StyledLogo","img","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","className","alt","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","style","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6be27270.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","const size = {\n  xs: \"320px\",\n  sm: \"768px\",\n  lg: \"1200px\",\n  xl: \"1900px\",\n }\n const device = {\n  minxs: `(min-width: ${size.xs})`,\n  minsm: `(min-width: ${size.sm})`,\n  minlg: `(min-width: ${size.lg})`,\n  minxl: `(min-width: ${size.xl})`,\n  maxxs: `(max-width: ${size.xs})`,\n  maxsm: `(max-width: ${size.sm})`,\n  maxlg: `(max-width: ${size.lg})`,\n  maxxl: `(max-width: ${size.xl})`,\n }\n export default {size, device}","import styled from \"styled-components\";\nimport breakpoint from './breakpoints';\n\nexport const Screen = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media only screen and ${breakpoint.device.minsm} and ${breakpoint.device.maxlg}{\n    flex-direction: row;\n    align-items: center;\n  }\n  @media only screen and ${breakpoint.device.minlg}{\n    flex-direction: row;\n  }\n`;\n\nexport const Information = styled.div`\n  background: ${({ bg }) => (bg ? bg : \"black\")};\n  display: flex;\n  flex-direction: row;\n\n  @media only screen and ${breakpoint.device.maxsm}{\n    flex-direction: column;\n  }\n\n  .left,\n  .right {\n    width: 100%;\n    font-size: 1.25rem;\n    line-height: 1.5;\n    color: ${({ color }) => (color ? color : \"var(--secondary-text)\")};\n  }\n\n  .left {\n    padding: 8% 4% 4% 8%;\n\n    h1 {\n      font-size: 10rem;\n      font-weight: bold;\n\n      @media only screen and ${breakpoint.device.maxsm}{\n        font-size: 5rem;\n      }\n    }\n  }\n\n  .right {\n    padding: 8% 8% 4% 4%;\n\n    h1 {\n      font-size: 2.5rem;\n      font-weight: bold;\n\n      @media only screen and ${breakpoint.device.maxsm}{\n        font-size: 1.5rem;\n      }\n    }\n\n    .faq-q {\n      margin-bottom: 2rem;\n\n      .bullet {\n        padding-left: 2rem;\n        margin: 1rem 0;\n      }\n    }\n  }\n\n  @media only screen and ${breakpoint.device.maxsm}{\n    .right {\n      padding: 8% 8% 8% 8%;\n    }\n\n    .left {\n      padding: 8% 8% 0 8%;\n    }\n  }\n`;\n\nexport const ImagesBanner = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  div {\n    width: 20%;\n\n    @media only screen and ${breakpoint.device.minsm}{\n      width: 10%;\n    }\n\n    img {\n      width: 100%;\n    }\n  }\n`\n\nexport const TextBanner = styled.div`\n  background: black;\n  width: 100%;\n  height: 170px;\n  color: var(--secondary-text);\n  font-size: 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  line-height: 1.25;\n\n  a:hover {\n    color: var(--primary);\n  }\n\n  @media only screen and ${breakpoint.device.minxs} and ${breakpoint.device.maxsm}{\n    p {\n      padding: 0 1rem;\n      font-size: 1.5rem;\n      line-height: 1.5;\n    }\n  }\n`\n\nexport const Left = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: auto;\n  width: 100%;\n  padding: 8% 8% 8% 8%;\n  @media only screen and ${breakpoint.device.minlg}{\n    width: 50%;\n    padding: 4% 4% 4% 4%;\n  }\n`;\n\nexport const Top = styled.div`\n  @media only screen and ${breakpoint.device.minxs} and ${breakpoint.device.maxsm}{\n    max-width: 300px;\n  }\n  @media only screen and ${breakpoint.device.minsm} and ${breakpoint.device.maxlg}{\n    max-width: 400px;\n  }\n  @media only screen and ${breakpoint.device.minlg} and ${breakpoint.device.maxxl}{\n    max-width: 1020px;\n  }\n  @media only screen and ${breakpoint.device.minxl}{\n    width: 790px;\n  }\n`;\n\nexport const Bottom = styled.div`\n  margin: 3rem 0;\n\n  .counter {\n    font-size:  3rem;\n    font-weight: bold;\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Right = styled.div`\n  height: 400px;\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  @media only screen and ${breakpoint.device.minsm}{\n    background-position: inherit;\n  }\n  @media only screen and ${breakpoint.device.minlg}{\n    background-size: cover;\n    width: 50%;\n    height: auto;\n  }\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 1rem;\n  margin-bottom: .5rem;\n  @media only screen and ${breakpoint.device.minsm}{\n    font-size: 1.25rem;\n  }\n`;\n\n","export default __webpack_public_path__ + \"static/media/basiersquaremono.412c5efb.woff\";","export default __webpack_public_path__ + \"static/media/basiersquaremono.e4ada8fa.woff2\";","import { createGlobalStyle } from 'styled-components';\n\nimport basiersquaremono from './basiersquaremono.woff';\nimport basiersquaremono2 from './basiersquaremono.woff2';\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'basier_square_monoregular';\n        src: local('basier_square_monoregular'), local('basiersquaremono'),\n        url(${basiersquaremono2}) format('woff2'),\n        url(${basiersquaremono}) format('woff');\n        font-weight: normal;\n        font-style: normal;\n    }\n`;","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport GlobalFonts from './fonts/fonts';\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nconst firstRowImages = [1,2,3,4,5,6,7,8,9,10].map(image => (<div key={image}><img src={`/polygonos_mint_dapp/config/images/${image}.png`} /></div>));\n\nconst secondRowImages = [11,12,13,14,15,16,17,18,19,20].map(image => (<div key={image}><img src={`/polygonos_mint_dapp/config/images/${image}.png`} /></div>));\n\nconst thirdRowImages = [21,22,23,24,25,26,27,28,29,30].map(image => (<div key={image}><img src={`/polygonos_mint_dapp/config/images/${image}.png`} /></div>));\n\nconst fourthRowImages = [31,32,33,34,35,36,37,38,39,40].map(image => (<div key={image}><img src={`/polygonos_mint_dapp/config/images/${image}.png`} /></div>));\n\nexport const StyledButton = styled.button`\n  border: none;\n  background-color: var(--accent-text);\n  padding: 20px 40px;\n  color: var(--secondary-text);\n  cursor: pointer;\n  font-family: 'basier_square_monoregular';\n  font-weight: bold;\n  font-size: 1rem;\n  letter-spacing: 5px;\n  margin: 1rem 0;\n\n  &:hover {\n    background-color: var(--secondary);\n    color: var(--secondary-text);\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--accent-text);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 1.5rem;\n  color: var(--secondary-text);\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n\n  &:hover {\n    background-color: var(--primary);\n    color: var(--primary-text);\n  }\n`;\n\nexport const InteractionBox  = styled.div`\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n`\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 200px;\n\n  p {\n    font-size: 2rem;\n    font-weight: bold;\n  }\n`\n\nexport const StyledLogo = styled.img`\n  width: 100%;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--accent-text);\n  text-decoration: none;\n\n  &:hover {\n    color: var(--accent);\n  }\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          `Welcome to the ${CONFIG.NFT_NAME} fam! Go visit Opensea.io to view your Polygono.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 5) {\n      newMintAmount = 5;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <>\n      <s.Screen>\n        <GlobalFonts/>\n        <s.Left className=\"left\">\n          <s.Top className=\"top\">\n            <StyledLogo alt={\"logo\"} src={\"/polygonos_mint_dapp/config/images/Polygonos_logo.svg\"} />\n          </s.Top>\n          <s.Bottom className=\"bottom\">\n              <p className=\"counter\">\n                {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n              </p>\n              <s.TextDescription>\n                <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                  {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n                </StyledLink>\n              </s.TextDescription>\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                <>\n                  <s.TextDescription>\n                    The sale has ended.\n                  </s.TextDescription>\n                  <s.TextDescription>\n                    You can still find {CONFIG.NFT_NAME} on\n                  </s.TextDescription>\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                    {CONFIG.MARKETPLACE}\n                  </StyledLink>\n                </>\n              ) : (\n                <>\n                  <s.TextDescription>\n                    1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                    {CONFIG.NETWORK.SYMBOL}.\n                  </s.TextDescription>\n                  {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                      <>\n                        <s.TextDescription>\n                          Connect to the {CONFIG.NETWORK.NAME} network\n                        </s.TextDescription>\n                        <StyledButton\n                          onClick={(e) => {\n                            e.preventDefault();\n                            dispatch(connect());\n                            getData();\n                          }}\n                        >\n                          CONNECT\n                        </StyledButton>\n                        {blockchain.errorMsg !== \"\" ? (\n                          <>\n                            <s.TextDescription>\n                              {blockchain.errorMsg}\n                            </s.TextDescription>\n                          </>\n                        ) : null}\n                      </>\n                  ) : (\n                    <InteractionBox>\n                      <s.TextDescription>\n                        {feedback}\n                      </s.TextDescription>\n                      <ButtonWrapper>\n                        <StyledRoundButton\n                          style={{ lineHeight: 0.4 }}\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            decrementMintAmount();\n                          }}\n                        >\n                          -\n                        </StyledRoundButton>\n                        <p>\n                          {mintAmount}\n                        </p>\n                        <StyledRoundButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            incrementMintAmount();\n                          }}\n                        >\n                          +\n                        </StyledRoundButton>\n                      </ButtonWrapper>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </InteractionBox>\n                  )}\n                </>\n              )}\n          </s.Bottom>\n        </s.Left>\n        <s.Right image={\"/polygonos_mint_dapp/config/images/PolygonosGIF.gif\"} />\n      </s.Screen>\n      <s.Information>\n        <div className=\"left\">Polygonos is a collection of 1,010 abstract characters programmatically generated using more than 50 polygons and minted as NFTs.Polygonos are made up of a unique combination of hairstyles, face accessories, and tattoos, across 50+ traits randomized for varying rarities.</div>\n        <div className=\"right\">Polygonos are known to have many different sides that follow a straight belief. However, there are Polygonos that are different and bend their sides to their vibes making them rare within their posse.</div>\n      </s.Information>\n      <s.ImagesBanner>{firstRowImages}</s.ImagesBanner>\n      <s.TextBanner>\n        <p>No roadmaps or promises, just vibes.</p>\n      </s.TextBanner>\n      <s.ImagesBanner>{secondRowImages}</s.ImagesBanner>\n      <s.Information bg=\"white\" color=\"black\">\n        <div className=\"left\">\n          <h1>FAQ</h1>\n        </div>\n        <div className=\"right\">\n          <div className=\"faq-q\">\n            <h1>What are Polygonos?</h1>\n            <p>Polygonos is a collection of programmatically generated abstract characters designed by <StyledLink target={\"_blank\"} href=\"https://twitter.com/brizism\">@brizism</StyledLink> and minted as NFTs on the Ethereum blockchain.</p>\n          </div>\n          <div className=\"faq-q\">\n            <h1>Who is behind Polygonos?</h1>\n            <p><StyledLink target={\"_blank\"} href=\"https://twitter.com/brizism\">@brizism</StyledLink>, the dev/designer behind Polygonos is inspired by abstract, Russian Constructivism art and applies that to her designs. She studied graphic design and career transitioned to web dev and now wants to immerse herself in all things crypto.</p>\n          </div>\n          <div className=\"faq-q\">\n            <h1>What's on the roadmap?</h1>\n            <p>No roadmap doesn't mean no utility, no production, no future drops, no meetups, no love, no friends. It just means there is no one direct path to lead to all these cool things. All I can promise is to keep creating.</p>\n          </div>\n          <div className=\"faq-q\">\n            <h1>What's an NFT?</h1>\n            <p>NFT stands for \"Non-fungible token,\" which means that it's a unique digital item. NFTs can really be anything digital (such as drawings, music, your brain downloaded and turned into an AI) with blockchain-managed ownership that users can collect, own, and trade. Some NFT's fundamental function is to be digital art. But they can also offer additional benefits like exclusive access to websites, event tickets, game items, and ownership records for physical objects.</p>\n          </div>\n          <div className=\"faq-q\">\n            <h1>How do I NFT?</h1>\n            <p>New to NFTs? No problemo, here are some steps on what you need to do to get your Polygono.</p>\n            <p className=\"bullet\">Download the <StyledLink target={\"_blank\"} href=\"https://metamask.io/\">metamask.io</StyledLink> extension for your Chrome browser or app on mobile. This will allow you to buy with Ethereum and can be found in the extensions tab. If you are on mobile, you must use the Metamask App Browser</p>\n            <p className=\"bullet\">You can buy Ethereum through the Metamask Wallet using Wyre or Send Ethereum from an exchange like <StyledLink target={\"_blank\"} href=\"https://www.coinbase.com/\">Coinbase</StyledLink>.</p>\n            <p className=\"bullet\">Click on the Connect button at the top of the page and connect your Metamask. Once connected, you will be able to buy up to five Polygonos. You will be prompted to sign your transaction. FYI, there will be a fee associated with every transaction related to gas prices.</p>\n            <p className=\"bullet\">Once you have completed your transaction, your Polygonos NFTs will be viewable in your wallet and on OpenSea.</p>\n          </div>\n        </div>\n      </s.Information>\n      <s.ImagesBanner>{thirdRowImages}</s.ImagesBanner>\n      <s.ImagesBanner>{fourthRowImages}</s.ImagesBanner>\n      <s.TextBanner>\n        <p>Polygonos on <StyledLink target={\"_blank\"} href=\"https://twitter.com/polygonosNFT\">[Twitter]</StyledLink> <StyledLink target={\"_blank\"} href=\"https://opensea.io/collection/polygonos\">[OpenSea]</StyledLink>.</p>\n      </s.TextBanner>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}